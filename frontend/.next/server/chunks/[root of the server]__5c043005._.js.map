{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/fyp_flask_project/frontend/src/app/api/user/profile/route.js"],"sourcesContent":["import { NextResponse } from 'next/server'\r\n\r\n// This is just an example - replace with your actual database connection\r\nconst mockUser = {\r\n    name: \"王小明\",\r\n    school: \"台北市建國高級中學\",\r\n    grade: \"高三\",\r\n    class: \"(3)\",\r\n    email: \"wang.student@school.edu.tw\",\r\n    phone: \"0912-345-678\",\r\n    targetSchools: [\r\n        { schoolName: \"國立臺灣大學\", department: \"資訊工程學系\" },\r\n        { schoolName: \"國立政治大學\", department: \"資訊管理學系\" },\r\n        { schoolName: \"國立臺灣科技大學\", department: \"人工智慧研究所\" }\r\n    ]\r\n}\r\n\r\nexport async function GET() {\r\n    try {\r\n        // Replace this with your actual database query\r\n        const userData = {\r\n            // Basic user info\r\n            name: \"王小明\",\r\n            school: \"台北市建國高級中學\",\r\n            grade: \"高三\",\r\n            class: \"(3)\",\r\n            email: \"wang.student@school.edu.tw\",\r\n            phone: \"0912-345-678\",\r\n            profilePicture: null, // URL to profile picture if exists\r\n            \r\n            // Target schools with departments\r\n            targetSchools: [\r\n                {\r\n                    id: \"1\",\r\n                    schoolName: \"國立臺灣大學\",\r\n                    departmentName: \"資訊工程學系\",\r\n                    rank: 1\r\n                },\r\n                {\r\n                    id: \"2\",\r\n                    schoolName: \"國立政治大學\",\r\n                    departmentName: \"資訊管理學系\",\r\n                    rank: 2\r\n                },\r\n                {\r\n                    id: \"3\",\r\n                    schoolName: \"國立臺灣科技大學\",\r\n                    departmentName: \"人工智慧研究所\",\r\n                    rank: 3\r\n                }\r\n            ]\r\n        }\r\n        \r\n        return NextResponse.json(userData)\r\n    } catch (error) {\r\n        return NextResponse.json(\r\n            { error: 'Failed to fetch user data' },\r\n            { status: 500 }\r\n        )\r\n    }\r\n}\r\n\r\nexport async function PUT(request) {\r\n    try {\r\n        const userData = await request.json()\r\n        // TODO: Update user data in your database\r\n        console.log('Updating user data:', userData)\r\n        \r\n        return NextResponse.json({ success: true })\r\n    } catch (error) {\r\n        return NextResponse.json(\r\n            { error: 'Failed to update profile' },\r\n            { status: 500 }\r\n        )\r\n    }\r\n} "],"names":[],"mappings":";;;;AAAA;;AAEA,yEAAyE;AACzE,MAAM,WAAW;IACb,MAAM;IACN,QAAQ;IACR,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,eAAe;QACX;YAAE,YAAY;YAAU,YAAY;QAAS;QAC7C;YAAE,YAAY;YAAU,YAAY;QAAS;QAC7C;YAAE,YAAY;YAAY,YAAY;QAAU;KACnD;AACL;AAEO,eAAe;IAClB,IAAI;QACA,+CAA+C;QAC/C,MAAM,WAAW;YACb,kBAAkB;YAClB,MAAM;YACN,QAAQ;YACR,OAAO;YACP,OAAO;YACP,OAAO;YACP,OAAO;YACP,gBAAgB;YAEhB,kCAAkC;YAClC,eAAe;gBACX;oBACI,IAAI;oBACJ,YAAY;oBACZ,gBAAgB;oBAChB,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,YAAY;oBACZ,gBAAgB;oBAChB,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,YAAY;oBACZ,gBAAgB;oBAChB,MAAM;gBACV;aACH;QACL;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAEtB;AACJ;AAEO,eAAe,IAAI,OAAO;IAC7B,IAAI;QACA,MAAM,WAAW,MAAM,QAAQ,IAAI;QACnC,0CAA0C;QAC1C,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC7C,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAEtB;AACJ","debugId":null}}]
}