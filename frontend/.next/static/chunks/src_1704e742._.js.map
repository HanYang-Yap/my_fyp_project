{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/fyp_flask_project/frontend/src/firebase/config.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"your-api-key\",\r\n  authDomain: \"your-auth-domain\",\r\n  projectId: \"your-project-id\",\r\n  storageBucket: \"your-storage-bucket\",\r\n  messagingSenderId: \"your-messaging-sender-id\",\r\n  appId: \"your-app-id\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\nexport { db }; "],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAC1B,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file://D%3A/GitHub/fyp_flask_project/frontend/src/app/queryGuide/page.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport styles from './queryGuide.module.css';  // 確保這行正確導入\nimport { db } from '@/firebase/config';\nimport { collection, getDocs } from 'firebase/firestore';\n\nexport default function QueryGuide() {\n    const [currentQuestion, setCurrentQuestion] = useState(1);\n    const [answers, setAnswers] = useState(Array(10).fill(''));\n    const [completed, setCompleted] = useState(Array(10).fill(false));\n    const [questions, setQuestions] = useState([]);\n    const [hints, setHints] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    // 從 Firebase 獲取問題和提示\n    useEffect(() => {\n        async function fetchQuestions() {\n            try {\n                const questionsRef = collection(db, 'guidanceQuestions');\n                const querySnapshot = await getDocs(questionsRef);\n                const fetchedQuestions = [];\n                const fetchedHints = [];\n                \n                querySnapshot.forEach((doc) => {\n                    const data = doc.data();\n                    fetchedQuestions.push(data.question);\n                    fetchedHints.push(data.hint);\n                });\n\n                setQuestions(fetchedQuestions);\n                setHints(fetchedHints);\n                setLoading(false);\n            } catch (error) {\n                console.error(\"Error fetching questions:\", error);\n                // 如果獲取失敗，使用默認問題\n                setQuestions([\n                    \"你為何選擇「資訊管理」而非「純資訊工程」或「商學相關科系」？具體的興趣與目標是什麼？\",\n                    \"請詳細描述你在高中參與的資訊相關專題或比賽\",\n                    \"你在「資訊社社長」的角色中，面臨過什麼挑戰？如何解決？\",\n                    \"你提到對「企業管理或金融分析」有興趣，這些興趣源於什麼經歷？\",\n                    \"在校園導覽APP的開發中，你遇到最大的技術困難是什麼？如何克服？\",\n                    \"你希望在大學期間發展哪些專業技能？為什麼？\",\n                    \"你如何評估自己在程式設計方面的優勢與不足？\",\n                    \"你對人工智能和大數據有什麼看法？這與你的學習目標有何關聯？\",\n                    \"你期望在本校系學到什麼特定知識？為什麼這些對你很重要？\",\n                    \"你的長期職業規劃是什麼？大學學習如何支持這個目標？\"\n                ]);\n                setLoading(false);\n            }\n        }\n\n        fetchQuestions();\n    }, []);\n\n    const switchQuestion = (index) => {\n        setCurrentQuestion(index);\n    };\n\n    const saveAnswer = async () => {\n        const answer = document.querySelector(`.${styles['answer-textarea']}`).value.trim();\n        const newAnswers = [...answers];\n        newAnswers[currentQuestion - 1] = answer;\n        setAnswers(newAnswers);\n\n        const newCompleted = [...completed];\n        newCompleted[currentQuestion - 1] = answer !== '';\n        setCompleted(newCompleted);\n\n        // 這裡可以加入將答案保存到 Firebase 的邏輯\n        alert('答案已儲存！');\n    };\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className={styles['main-content']}>\n            <div className={styles['content-header']}>\n                <h1 className={styles['page-title']}>提問引導與釐清</h1>\n            </div>\n            \n            <div className={styles['guidance-container']}>\n                {/* 左側問題列表 */}\n                <div className={styles['question-list']}>\n                    <div className={styles['list-title']}>十個引導式問題</div>\n                    \n                    {questions.map((question, index) => (\n                        <div\n                            key={index}\n                            className={`${styles['question-item']} \n                                ${currentQuestion === index + 1 ? styles['active'] : ''} \n                                ${completed[index] ? styles['completed'] : ''}`}\n                            onClick={() => switchQuestion(index + 1)}\n                        >\n                            <div className={styles['question-number']}>問題 {index + 1}</div>\n                            <div className={styles['question-preview']}>{question}</div>\n                        </div>\n                    ))}\n                </div>\n                \n                {/* 右側答題區 */}\n                <div className={styles['answer-area']}>\n                    <div className={styles['question-header']}>\n                        <div className={styles['current-number']}>\n                            問題 {currentQuestion} / 10\n                        </div>\n                        <div className={styles['progress-info']}>\n                            已完成 {completed.filter(Boolean).length}/10 個問題\n                        </div>\n                    </div>\n                    \n                    <div className={styles['hint-box']}>\n                        <div className={styles['hint-title']}>\n                            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n                                <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"none\" stroke=\"#5d8a9e\" strokeWidth=\"2\" />\n                                <path d=\"M12 16v-4\" stroke=\"#5d8a9e\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n                                <circle cx=\"12\" cy=\"8\" r=\"1\" fill=\"#5d8a9e\" />\n                            </svg>\n                            回答提示\n                        </div>\n                        <div className={styles['hint-content']}>\n                            {hints[currentQuestion - 1] || '請詳細說明你的想法，具體的例子和經歷會使你的回答更有說服力。'}\n                        </div>\n                    </div>\n                    \n                    <div className={styles['question-content']}>\n                        {questions[currentQuestion - 1]}\n                    </div>\n                    \n                    <div className={styles['answer-box']}>\n                        <div className={styles['answer-label']}>你的回答：</div>\n                        <textarea \n                            className={styles['answer-textarea']} \n                            placeholder=\"在這裡輸入你的回答...\"\n                            value={answers[currentQuestion - 1]}\n                            onChange={(e) => {\n                                const newAnswers = [...answers];\n                                newAnswers[currentQuestion - 1] = e.target.value;\n                                setAnswers(newAnswers);\n                            }}\n                        />\n                    </div>\n                    \n                    <div className={styles['answer-controls']}>\n                        <button \n                            className={`${styles['nav-button']} ${styles['prev-button']}`}\n                            onClick={() => switchQuestion(currentQuestion - 1)}\n                            disabled={currentQuestion === 1}\n                        >\n                            <svg viewBox=\"0 0 24 24\">\n                                <path d=\"M19 12H5\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n                                <path d=\"M12 19l-7-7 7-7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                            </svg>\n                            上一題\n                        </button>\n                        \n                        <button className={styles['save-button']} onClick={saveAnswer}>\n                            儲存答案\n                        </button>\n                        \n                        <button \n                            className={`${styles['nav-button']} ${styles['next-button']}`}\n                            onClick={() => switchQuestion(currentQuestion + 1)}\n                            disabled={currentQuestion === 10}\n                        >\n                            下一題\n                            <svg viewBox=\"0 0 24 24\">\n                                <path d=\"M5 12h14\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n                                <path d=\"M12 5l7 7-7 7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            \n            <button className={styles['next-stage-button']} onClick={() => window.location.href='/logic-flow'}>\n                回答好了！檢查邏輯與流暢度\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n                    <path d=\"M5 12h14\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n                    <path d=\"M12 5l7 7-7 7\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                </svg>\n            </button>\n        </div>\n    );\n} "],"names":[],"mappings":"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","debugId":null}}]
}